@startuml empleados
Alta: Estado = "A"
Baja: Estado = "B"

top to bottom direction
[*] --> Alta: GestorEmpleados.crearEmpleado(empleado Empleados)
Baja --> [*]: GestorEmpleados.borrarEmpleado(empleado Empleados)
Alta --> Baja: Empleados.darAlta()
Baja --> Alta: Empleados.darBaja()

@enduml

@startuml tareas
Pendiente: Estado = "P"
EnProceso: Estado = "E"
Finalizada: Estado = "F"
Pausada: Estado = "S"
Cancelada: Estado = "C"
Verificada: Estado = "V"


[*] --> Pendiente: LineasOrdenProduccion.crearTarea(tarea Tareas)
Pendiente --> [*]: LineasOrdenProduccion.borrarTarea(tarea Tareas)
Cancelada --> [*]: LineaOrdenProduccion.borrarTarea(tarea Tareas)
Pendiente --> EnProceso: Tareas.ejecutar()
EnProceso --> Cancelada: Tareas.cancelar()
EnProceso --> Finalizada: Tareas.finalizar()
EnProceso --> Pausada: Tareas.pausar()
Finalizada --> EnProceso: Tareas.reanudar()
Pausada --> EnProceso: Tareas.reanudar()
Pausada --> Cancelada: Tareas.cancelar()
Cancelada --> EnProceso: Tareas.reanudar()
Finalizada --> Cancelada: Tareas.cancelar()
Finalizada --> Verificada: Tareas.verificar()
Verificada --> EnProceso: Tareas.reanudar()

@enduml

@startuml lineasProducto
Pendiente: Estado = "P"
Cancelada: Estado = "C"
NoUtilizada: Estado = "N"
Utilizada: Estado = "U"
PendienteDeProduccion: Estado = "F "
PendienteDeProduccion:(No tiene tareas | Sus tareas estan pendientes)
EnProduccion: Estado = "F"
EnProduccion: Tiene tareas y no estan pendientes
Verificada: Estado = "V"
Verificada: Venta tiene saldo
Pagada: Estado = "V"
Pagada: Venta sin saldo 
Pagada: IdRemito = null
PendienteDeEntrega: Estado = "V"
PendienteDeEntrega: (IdRemito != null && \n Venta sin saldo && Remito no cancelado) || Sin Venta 
'Hicimos que estado = D para simplicidad en la busqueda.
Entregada: Estado = "D" 

top to bottom direction
[*] --> Pendiente: Presupuestos.crearLineaPresupuesto(lp LineaPresupuesto)
[*] --> Pendiente: Ventas.crearLineaVenta(lv LineasVenta)
Pendiente --> [*]
[*] --> PendienteDeProduccion: OrdenesProduccion.crearLineaOrdenProduccion(lOP LineasOrdenProduccion)
PendienteDeProduccion --> [*]: OrdenesProduccion.borrarLineaOrdenProduccion(lOP LineasOrdenProduccion)
Pendiente --> Utilizada
Utilizada --> Pendiente
Pendiente --> NoUtilizada
NoUtilizada --> Pendiente
Pendiente --> Cancelada
Pendiente --> PendienteDeProduccion
Pendiente --> Verificada
PendienteDeProduccion --> Cancelada
PendienteDeProduccion --> EnProduccion
EnProduccion --> Cancelada
Verificada --> Cancelada
Pagada --> Cancelada
EnProduccion --> Verificada
Verificada --> Pagada
Pagada --> PendienteDeEntrega
PendienteDeEntrega --> Entregada
PendienteDeEntrega --> [*]
Entregada --> Cancelada : Cancelar linea de venta

@enduml

@startuml presupuestos

EnCreacion: Estado = "E"
Creado: Estado = "C"
Vendido: Estado = "V"
Expirado: Estado = "C"
Expirado: FechaAlta + Perido de validez > Hoy

[*] --> EnCreacion: GestorPresupuestos.crearPresupuesto(p Presupuestos)
EnCreacion --> Creado
Creado --> Vendido
Creado --> Expirado
Vendido --> Creado
EnCreacion --> [*]: GestorPresupuestos.borrarPresupuesto(p Presupuestos)
Creado --> [*]: GestorPresupuestos.borrarPresupuesto(p Presupuestos)

@enduml

@startuml ventas
top to bottom direction

EnCreacion: Estado = "E"
EnRevision: Estado = "R"
Cancelada: Estado = "C"
Cancelada: Todas las lineas estan canceladas
Pendiente: Estado = "C"
Entregada: Estado = "C"
Entregada: Todas las lineas no canceladas estan entregadas

[*] --> EnCreacion: GestorVentas.crearVenta(venta Ventas)
[*] --> EnCreacion: GestorPresupuestos.transformarPresupuestosEnVenta(presupuestos List<Presupuestos>)
EnCreacion --> [*]: GestorPresupuestos.borrarPresupuesto(p Presupuestos)
EnCreacion -> EnRevision
EnCreacion --> Pendiente
EnCreacion --> Cancelada
EnRevision --> Cancelada
EnRevision --> Pendiente
Pendiente --> Cancelada
Pendiente --> Entregada

@enduml

@startuml ordenesProduccion
EnCreacion: Estado = "E"
Pendiente: Estado = "C"
Pendiente: Todas las lineas de producto no canceladas, no verificadas y no entregadas estan pendiente de produccion
EnProduccion: Estado = "C"
EnProduccion: Al menos una linea esta en produccion
Verificada: Estado = "C"
Verificada: Todas las lineas de producto no canceladas estan verificadas o entregadas
Cancelada: Estado = "C"
Cancelada: Todas las lineas de producto se encuentran canceladas

[*]--> EnCreacion: Desde Ventas
[*]--> EnCreacion: GestorOrdenesProduccion.crearOrdenProduccion(op OrdenesProduccion)
EnCreacion --> [*]: GestorOrdenesProduccion.borrarOrdenProduccion(op OrdenesProduccion)
EnCreacion -->Pendiente
Pendiente --> EnProduccion
Pendiente --> Cancelada
EnProduccion --> Verificada
@enduml

@startuml remitos
left to right direction

EnCreacion: Estado = "E"
Creado: Estado = "C"
Entregado: Estado = "C"
Entregado: FechaEntrega != null
Cancelado: Estado = "B"

[*] --> EnCreacion: GestorRemitos.crearRemito(remito Remitos)
[*] --> EnCreacion: Ventas.generarRemito()
EnCreacion --> Creado
Creado --> Entregado: Remitos.entregar()
Cancelado --> Creado: Remitos.descancelar()
Creado --> Cancelado: Remitos.cancelar()
EnCreacion --> [*]: GestorRemitos.borrarRemito(remito Remitos)
Creado --> [*]: GestorRemitos.borrarRemito(remito Remitos)

@enduml